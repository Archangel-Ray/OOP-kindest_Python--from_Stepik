in this lesson, there are no solutions to problems, but there is a quiz.:

1.  What is the basis of OOP?
    >> polymorphism
    >> inheritance
    >> encapsulation

2.  How it is necessary to perceive a class in ООП?
    >> as a template for constructing objects of this class

3.  What is the essence of the idea of inheritance in OOP?
    >> inheritance allows, as it were, to take out “out of brackets” the common for different classes
    >> based on one or more classes, a new (child) class is created

4.  Is it possible to write programs without using OOP?
    >> yes, for example using structured programming paradigm (not including OOP)

5.  You have to write a program for storing information on books: author, title, year of publication, number of pages.
    Would classes help here to represent this heterogeneous information?
    >> yes, describing each book as an object of class 'Book' is a good idea

6.  What term from OOP can characterize the restriction of access to class members?
    >> encapsulation

7.  You have to create a program for a simple graphic editor with drawing various graphic primitives (line,
    rectangle, ellipse, triangle, etc.). Will it make sense to use the concept of OOP in its implementation?
    >> yes, OOP here can significantly simplify the program code

8.  What term from OOP can characterize the universality of the interface for accessing different data types?
    >> polymorphism
